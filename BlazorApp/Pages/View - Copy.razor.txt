@page "/view"
@using BlazorApp.Data
@inject EmployeeService EmployeeService

<body>
    <div class="container">
@* 
        <div class="holder top">
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
        </div>
        <div class="holder main">
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
        </div>
        <div class="holder middle"></div>
        <div class="holder bottom"></div> *@
        @for (int i = 0; i < 20; i++)
        {
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>
        }



        @if (false && !EmployeeService.isLoading)
        {
            <!-- Selected Employee -->
            <div class="box primary">
                <EmployeeCard Employee="@EmployeeService.selectedEmployee" />
            </div>

            <!-- Siblings (Up.Downs) -->
            @if (EmployeeService.selectedEmployee?.Up?.Downs != null)
            {
                @foreach (var item in EmployeeService.selectedEmployee.Up.Downs.Where(e => e != EmployeeService.selectedEmployee))
                {
                    <div class="box subprimary">
                        <EmployeeCard Employee="@item" />
                        <NavLink class="custom" @onclick="() => EmployeeService.selectedEmployee = item">
                            <span class="oi oi-people" aria-hidden="true"></span> Expand
                        </NavLink>
                    </div>
                }
            }

            <!-- Manager (Up) -->
            @if (EmployeeService.selectedEmployee?.Up != null)
            {
                <div class="box up">
                    <EmployeeCard Employee="@EmployeeService.selectedEmployee.Up" />
                    <NavLink class="custom" @onclick="() => EmployeeService.selectedEmployee = EmployeeService.selectedEmployee.Up">
                        <span class="oi oi-people" aria-hidden="true"></span> Expand
                    </NavLink>
                </div>
            }

            <!-- Subordinates (Downs) -->
            @if (EmployeeService.selectedEmployee?.Downs != null)
            {
                @foreach (var item in EmployeeService.selectedEmployee.Downs)
                {
                    <div class="box down">
                        <EmployeeCard Employee="@item" />
                        <NavLink class="custom" @onclick="() => EmployeeService.selectedEmployee = item">
                            <span class="oi oi-people" aria-hidden="true"></span> Expand
                        </NavLink>
                    </div>
                }
            }
        }
    </div>
</body>

@code {
    protected override void OnInitialized()
    {
        EmployeeService.OnEmployeesLoaded += () => StateHasChanged();
    }
}

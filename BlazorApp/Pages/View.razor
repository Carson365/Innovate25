@page "/view"
@using BlazorApp.Data
@inject EmployeeService EmployeeService

<PageTitle>View</PageTitle>

<body>
	@if (!EmployeeService.isLoading)
	{
		<!-- Manager (Up) -->
		<div class="container">
@* 			<div class="leftFade"></div> *@
			<div class="leftSpacer"></div>
			@if (EmployeeService.selectedEmployee?.Up != null)
			{
				<div class="box up">
					<EmployeeCard Employee="@EmployeeService.selectedEmployee.Up" />

					<div class="nav-item">
						<NavLink class="custom" @onclick="() => EmployeeService.selectedEmployee = EmployeeService.selectedEmployee.Up">
							<span class="oi oi-magnifying-glass" aria-hidden="true"></span> &nbsp Expand
						</NavLink>
					</div>
				</div>
			}

		</div>
		<!-- Selected Employee and Siblings (Up.Downs) -->
		<div class="container">
			<div class="leftFade"></div>
			<div class="leftSpacer"></div>
			<div class="box primary">
				<EmployeeCard Employee="@EmployeeService.selectedEmployee" />
			</div>

			@if (EmployeeService.selectedEmployee?.Up?.Downs != null)
			{
				foreach (var item in EmployeeService.selectedEmployee.Up.Downs.Where(e => e != EmployeeService.selectedEmployee))
				{
					<div class="box subprimary">
						<EmployeeCard Employee="@item" />
						<div class="nav-item">
							<NavLink class="custom" @onclick="() => EmployeeService.selectedEmployee = item">
								<span class="oi oi-magnifying-glass" aria-hidden="true"></span> &nbsp Expand
							</NavLink>
						</div>
					</div>
				}
			}
		</div>
		<!-- Subordinates (Downs) -->
		<div class="container">
			<div class="leftFade"></div>
			<div class="leftSpacer"></div>
			@if (EmployeeService.selectedEmployee?.Downs != null)
			{
				@foreach (var item in EmployeeService.selectedEmployee.Downs)
				{
					<div class="box down">
						<EmployeeCard Employee="@item" />
						<div class="nav-item">
							<NavLink class="custom" @onclick="() => EmployeeService.selectedEmployee = item">
								<span class="oi oi-magnifying-glass" aria-hidden="true"></span> &nbsp Expand
							</NavLink>
						</div>
					</div>
				}
			}
		</div>
	}
</body>

@code {
	protected override void OnInitialized()
	{
		EmployeeService.OnEmployeesLoaded += () => StateHasChanged();
	}
}
